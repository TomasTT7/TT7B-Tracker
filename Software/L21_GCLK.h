/*
	Generic Clock Controller (GCLK)
		Generic Clock Generators are programmable prescalers that can use any of the system clock sources as a time base.
		Generic Clocks are clock signals generated by Generic Clock Generators and output by the Peripheral Channels,
		and serve as clocks for the peripherals of the system.
	
	Main Clock Controller (MCLK)
		It generates and controls synchronous clocks on the system. This includes the CPU, bus clocks (APB, AHB)
		as well as the synchronous (to the CPU) user interfaces of the peripherals.
		The AHB and APB clocks for a peripherals are all enabled by default.
		In STANDBY sleep mode, the MCLK is frozen if no synchronous clock is required.
		The source of MCLK is GCLK_MAIN - GCLK[0].
		
	All peripherals are composed of one digital bus interface connected to the APB or AHB bus and running from
	a corresponding clock in the Main Clock domain, and one peripheral core running from the peripheral Generic Clock (GCLK).	
	All registers in the bus interface are accessible without synchronization. All registers in the peripheral core
	are synchronized when written. Some registers in the peripheral core are synchronized when read.
	
	On any Reset the synchronous clocks start to their initial state:
		OSC16M is enabled and configured to run at 4MHz
		Generic Generator 0 uses OSC16M as source and generates GCLK_MAIN
		CPU and BUS clocks are undivided
	On a Power-on Reset, the 32KHz clock sources are reset and the GCLK module starts to its initial state:
		All Generic Clock Generators are disabled except
			Generator 0 is using OSC16M at 4MHz as source and generates GCLK_MAIN
		All Peripheral Channels in GCLK are disabled.
	On a User Reset the GCLK module starts to its initial state, except for:
		Generic Clocks that are write-locked, i.e., the according WRTLOCK is set to 1 prior to Reset
*/


#ifndef L21_GCLK_H
#define L21_GCLK_H


#include "stdint.h"


// Functions
void GCLK_x_enable(uint8_t gclk, uint8_t src, uint8_t div, uint8_t divsel, uint8_t runstdby);
void GCLK_x_disable(uint8_t gclk);
void MCLK_set_prescaler_CPU(uint8_t cpudiv);
void MCLK_set_prescaler_LP(uint8_t lpdiv);


#endif // L21_GCLK_H_